@page "/orderdetail/{id:int}"
@attribute [Authorize]
@inject NavigationManager navigationManager
@inject IProcessOrderUseCase processOrderUseCase
@inject IViewOrderDetailUserCase viewOrderDetailsUserCase
<div class="container">
    <h3>Chi tiết đặt hàng</h3>
    <div class="row">
       
        @if (order != null)
        {
            <p>
                <b>Customer Info:</b>
            </p>
            <p>
                @order.CustomerName
            </p>
            <p>
                @order.CustomerAddress
            </p>
            <p>
                @order.CustomerCity
            </p>
            <p>
                @order.CustomerStateProvince
            </p>
            <p>
                @order.CustomerCountry
            </p>
            <br />
            <br />
            <table class="table">
                <thead>
                    <tr>
                        <th>Product Name</th>
                        <th>Price</th>
                        <th>Quantity</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in order.LineItems)
                    {
                        <tr>
                            <td>
                                @item.Product.Name
                            </td>
                            <td>
                                @item.Product.Price
                            </td>
                            <td>
                                @item.Quantity
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <br />
            <button type="button" class="btn btn-primary" @onclick="HandleProcessOrder"> Mask Order as Process</button>
        }
    </div>
</div>

@code {
    [Parameter]
    public int Id { get; set; }
    private Order order;
    private AuthenticationState authState;

    [CascadingParameter]
    private Task<AuthenticationState> authStateTask{ get; set; }

    protected override async Task OnInitializedAsync()
    {
        authState = await authStateTask;
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        if(Id>0)
        {
            order = viewOrderDetailsUserCase.Execute(Id);
        }
    }
    private void HandleProcessOrder()
    {
        if (order != null && authState!=null)
        {
            processOrderUseCase.Execute(order.OrderId.Value, authState.User.Identity.Name);
            navigationManager.NavigateTo("/outstadingorders");
        }
    }
}
